apply plugin: 'com.android.application'

apply plugin: 'org.greenrobot.greendao'

//apply plugin: 'kotlin-android'
//
//apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.mofei.tau"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode project.appVersionCode as int
        versionName project.appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }

    sourceSets {
        release {
            assets.srcDirs = ['assets', 'configs/release']
        }
        debug {
            assets.srcDirs = ['assets', 'configs/debug']
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "com.android.support") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "26.+"
                }
            }
        }
    }

    greendao {
        schemaVersion dbSchemaVersion as int
        daoPackage 'io.taucoin.android.wallet.db.greendao'
        targetGenDir 'src/main/java'
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation(project(':lib_platform'))

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation rootProject.ext.junit
    androidTestImplementation rootProject.ext.test
    androidTestImplementation rootProject.ext.espresso
}